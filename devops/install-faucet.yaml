---
- name: install the block explorer
  hosts: api
  remote_user: root
  become_user: app
  become_method: su
  vars:
    contract: "{{ lookup('env','CONTRACT') or '0x14aD0baF28b67ae3905CFe8E2e5eA296278Ec4ab'}}"
    chain_id: "{{ lookup('env','CHAIN_ID') or '1717658228'}}"
    network_path: "/home/app/dyneth/"
    faucet_path: "{{ network_path }}/web/faucet/"
  tasks:
  - name: install package dependencies
    ansible.builtin.package:
      name:
       - python3
       - python3-pip
       - python3-dev
       - build-essential
       - nginx
      state: latest

  - name: read contract address
    shell: /bin/bash -c "cd {{ network_path }} && CONFIG={{ config }} make backup-secret | awk '{ print $2 }'"
    register: sk

  - debug: 
      var: "{{ '{{ sk.stdout_lines | last }}' }}"

#- name: deploy faucet contract 
#shell: /bin/bash -c "cd dyneth && SOL=contracts/Faucet.sol GAS_LIMIT=1000000 GAS_PRICE=10000000000 PARAMS=\\\"\\\" make contract-deploy "
#register: txid

#- debug:
#var: "{{ '{{ txid.stdout_lines | last }}' }}"

#  - pause:
# seconds: 10

#- name: read contract address
#shell: cd dyneth && TXID={{ txid.stdout_lines | last }} make contract-info | jq .
#register: contract

#- debug: var=contract.stdout

  - name: generate .env
    copy:
      src: ../web/faucet/.env.example
      dest: "{{ faucet_path }}/.env"

  - name: add private key to .env
    lineinfile:
      path: "{{ faucet_path }}/.env"
      line: "SK={{ sk.stdout_lines | last }}"

  - name: add contract address to .env
    lineinfile:
      path: "{{ faucet_path }}/.env"
      line: "CONTRACT_ADDRESS={{ contract }}"

  - name: add contract address to .env
    lineinfile:
      path: "{{ faucet_path }}/.env"
      line: "CHAIN_ID={{ chain_id }}"

  - name: install pipenv
    shell: /bin/bash -c "pip3 install pipenv"

  - name: start faucet with gunicorn
    shell: /bin/bash -c "cd {{ faucet_path }} && tmux new -d -s faucet \"pipenv lock && pipenv sync && pipenv run gunicorn --workers 3 --bind 0.0.0.0:5001 faucet:app\""
    become: true

      ## systemd service for gunicorn (doesn't work)
      #- name: service for gunicorn
      #blockinfile:
      #dest: /etc/systemd/system/gunicorn.service
      #create: true
      #block: |
      #[Unit]
      #Description=gunicorn daemon
      #After=network.target
      #
      #[Service]
      #User=www-data
      #Group=www-data
      #WorkingDirectory={{ faucet_path }}
      #
      #ExecStart=/bin/bash -c "pipenv lock && pipenv sync && pipenv run gunicorn --workers 3 --bind unix:/tmp/faucet.sock faucet:app"
      #
      #[Install]
      #WantedBy=multi-user.target


  - name: Configuration for nginx
    blockinfile:
      dest: /etc/nginx/sites-enabled/faucet
      create: true
      block: |
        server {
                listen 5000 default_server;
                listen [::]:5000 default_server;

                server_name _;
                location /static/ {
                        root /home/app/dyneth/web/faucet/;
                }

                location / {
                        include proxy_params;
                        proxy_pass http://127.0.0.1:5001;
                }
        }


  - name: Restart nginx
    ansible.builtin.systemd:
      state: restarted
      daemon_reload: yes
      name: nginx


